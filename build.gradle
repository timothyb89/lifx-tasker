buildscript {
    repositories {
        mavenCentral()
		mavenLocal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.0'
		
		classpath 'com.neenbedankt.gradle.plugins:android-apt:1.1'
    }
}

apply plugin: 'android'
apply plugin: 'android-apt'

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	compile 'org.timothyb89:lifx-java:1.0-SNAPSHOT'
	
	compile 'org.slf4j:slf4j-api:1.7.2'
	compile 'org.slf4j:slf4j-android:1.7.6'
	
	apt 'org.androidannotations:androidannotations:3.0.1'
    compile 'org.androidannotations:androidannotations-api:3.0.1'
	
	provided 'org.projectlombok:lombok:1.12.6'
}

apt {
	arguments {
        androidManifestFile variant.processResources.manifestFile 
        resourcePackageName 'org.timothyb89.lifx.tasker'

        // If you're using Android NBS flavors you should use the following line instead of hard-coded packageName
        // resourcePackageName android.defaultConfig.packageName

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
	
	lintOptions {
		abortOnError false
	}
	
	sourceSets {
		main {
			manifest.srcFile 'src/main/AndroidManifest.xml'
			
			java     .srcDirs = ['src/main/java', 'GENERATED_FOLDER']
			resources.srcDirs = ['src/main/resources']
			res      .srcDirs = ['src/main/res']
			assets   .srcDirs = ['src/main/assets']
		}
	}
	
	signingConfigs {
		release {
			// dummy passwords, will be prompted during build
			storeFile     file("empty.keystore")
			storePassword "xxx"
			keyAlias      "xxx"
			keyPassword   "xxx"
		}
	}
	
	buildTypes {
		debug {
			debuggable true
			zipAlign false
		}
		
		release {
			signingConfig signingConfigs.release
			debuggable false
			zipAlign true
		}
	}
}

task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
	def storeFile = new String(System.console().readLine("Keystore path: "))
	def keyAlias = new String(System.console().readLine("Key alias: "))
	def storePw = new String(System.console().readPassword("Keystore password: "))
    def keyPw  = new String(System.console().readPassword("Key password: "))
	
	android.signingConfigs.release.storeFile = file(storeFile)
	android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask -> 
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}
